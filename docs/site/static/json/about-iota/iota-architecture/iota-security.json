{
    "questions": [
      {
        "questionText": "Given that the Move compiler ensures assets can't be spent twice or lost due to logic errors, which of the following scenarios might still pose a risk to asset security despite the compiler's safeguards?",
        "answerOptions": [
          { "answerText": "Validators misbehaving during transaction processing.", "isCorrect": false },
          { "answerText": "A flaw in the cryptographic methods securing private keys.", "isCorrect": false },
          { "answerText": "Improper implementation of the asset logic in the smart contract by a third-party developer.", "isCorrect": true },
          { "answerText": "Delegating asset access to an untrusted third-party service.", "isCorrect": false }
        ]
      },
      {
        "questionText": "In IOTA, validators must reach consensus to confirm transactions. How does the network handle a situation where 25% of validators are actively submitting conflicting transactions, but the other 75% comply with the protocol?",
        "answerOptions": [
          { "answerText": "The conflicting transactions will cause the network to halt until the issue is resolved.", "isCorrect": false },
          { "answerText": "The conflicting transactions will be ignored, and the compliant validators will finalize the correct transactions.", "isCorrect": true },
          { "answerText": "The system will revert to a previous state, undoing recent transactions until consensus is restored.", "isCorrect": false },
          { "answerText": "The conflicting validators are automatically removed from the validator set, and new validators are selected to replace them.", "isCorrect": false }
        ]
      },
      {
        "questionText": "In IOTAâ€™s dPoS system, what happens to the security of the network if a large percentage of users delegate their tokens to a small set of validators?",
        "answerOptions": [
          { "answerText": "Network security improves due to increased validator reliability.", "isCorrect": false },
          { "answerText": "The voting power becomes concentrated, reducing decentralization and increasing the risk of collusion.", "isCorrect": true },
          { "answerText": "Validator rewards increase proportionally, improving performance.", "isCorrect": false },
          { "answerText": "Validators become less accountable as they have more locked tokens under their control.", "isCorrect": false }
        ]
      },
      {
        "questionText": "If a user mistakenly submits a transaction to the wrong address and it reaches finality, what technical aspect of the IOTA network prevents the transaction from being reversed or altered?",
        "answerOptions": [
          { "answerText": "Validators are bound by the cryptographic proof of the private key associated with the recipient address.", "isCorrect": false },
          { "answerText": "The smart contract logic prevents asset redirection after finality is reached.", "isCorrect": false },
          { "answerText": "The Move compiler automatically enforces transaction irreversibility.", "isCorrect": false },
          { "answerText": "The recipient's private key holds exclusive access rights, making any further modification impossible.", "isCorrect": true }
        ]
      },
      {
        "questionText": "Considering the public auditability of all transactions on IOTA, which of the following could be a potential vulnerability for users seeking privacy, even if they use pseudonymous addresses?",
        "answerOptions": [
          { "answerText": "Validators can track the transaction history and link multiple addresses to a single user.", "isCorrect": false },
          { "answerText": "Third-party services can provide enhanced privacy by masking user identity during asset transfers.", "isCorrect": false },
          { "answerText": "Pseudonymous addresses are still visible on the blockchain, which could lead to de-anonymization through pattern analysis.", "isCorrect": true },
          { "answerText": "The cryptographic proof provided by validators reveals the private key of the user involved in the transaction.", "isCorrect": false }
        ]
      }
    ]
  }
  