[
    {
        "questionText": "What type of metric is used in the `iota-metrics` crate to monitor running tasks, pending futures, and channel sizes?",
        "answerOptions": [
            { "answerText": "CounterVec", "isCorrect": false },
            { "answerText": "IntGaugeVec", "isCorrect": true },
            { "answerText": "HistogramVec", "isCorrect": false },
            { "answerText": "SummaryVec", "isCorrect": false }
        ]
    },
    {
        "questionText": "What is the purpose of the `monitored_scope` function in the `iota-metrics` crate?",
        "answerOptions": [
            { "answerText": "To track total iterations and duration of a specific scope.", "isCorrect": true },
            { "answerText": "To monitor network activity in real-time.", "isCorrect": false },
            { "answerText": "To gather all metrics from multiple registries.", "isCorrect": false },
            { "answerText": "To manage thread safety for running tasks.", "isCorrect": false }
        ]
    },
    {
        "questionText": "How does the `start_prometheus_server` function expose metrics in the `iota-metrics` crate?",
        "answerOptions": [
            { "answerText": "By storing metrics in a local file.", "isCorrect": false },
            { "answerText": "By pushing metrics to a remote Prometheus server.", "isCorrect": false },
            { "answerText": "By logging metrics to the console.", "isCorrect": false },{ "answerText": "By starting an HTTP server that serves metrics at the `/metrics` endpoint.", "isCorrect": true }
        ]
    }
]