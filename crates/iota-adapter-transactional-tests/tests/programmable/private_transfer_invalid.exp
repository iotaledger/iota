processed 11 tasks

init:
A: object(0,0)

task 1 'publish'. lines 9-18:
created: object(1,0)
mutated: object(0,1)
gas summary: computation_cost: 1000000, storage_cost: 5228800,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2 'programmable'. lines 20-22:
Error: Transaction Effects Status: Non Entry Function Invoked. Move Call must start with an entry function
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: NonEntryFunctionInvoked, source: Some("Cannot directly call iota::transfer::transfer. Use the public variant instead, iota::transfer::public_transfer"), command: Some(1) } }

task 3 'programmable'. lines 24-26:
Error: Transaction Effects Status: Non Entry Function Invoked. Move Call must start with an entry function
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: NonEntryFunctionInvoked, source: Some("Cannot directly call iota::transfer::share_object. Use the public variant instead, iota::transfer::public_share_object"), command: Some(1) } }

task 4 'programmable'. lines 28-33:
Error: Transaction Effects Status: Non Entry Function Invoked. Move Call must start with an entry function
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: NonEntryFunctionInvoked, source: Some("Cannot directly call iota::transfer::freeze_object. Use the public variant instead, iota::transfer::public_freeze_object"), command: Some(1) } }

task 5 'programmable'. lines 35-37:
Error: Transaction Effects Status: Non Entry Function Invoked. Move Call must start with an entry function
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: NonEntryFunctionInvoked, source: Some("Cannot directly call iota::transfer::transfer. Use the public variant instead, iota::transfer::public_transfer"), command: Some(1) } }

task 6 'programmable'. lines 39-41:
Error: Transaction Effects Status: Non Entry Function Invoked. Move Call must start with an entry function
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: NonEntryFunctionInvoked, source: Some("Cannot directly call iota::transfer::share_object. Use the public variant instead, iota::transfer::public_share_object"), command: Some(1) } }

task 7 'programmable'. lines 43-48:
Error: Transaction Effects Status: Non Entry Function Invoked. Move Call must start with an entry function
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: NonEntryFunctionInvoked, source: Some("Cannot directly call iota::transfer::freeze_object. Use the public variant instead, iota::transfer::public_freeze_object"), command: Some(1) } }

task 8 'programmable'. lines 50-52:
Error: Transaction Effects Status: Move Bytecode Verification Error. Please run the Bytecode Verifier for more information.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: VMVerificationOrDeserializationError, source: Some(VMError { major_status: CONSTRAINT_NOT_SATISFIED, sub_status: None, message: None, exec_state: None, location: Module(ModuleId { address: iota, name: Identifier("transfer") }), indices: [], offsets: [] }), command: Some(1) } }

task 9 'programmable'. lines 54-56:
Error: Transaction Effects Status: Move Bytecode Verification Error. Please run the Bytecode Verifier for more information.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: VMVerificationOrDeserializationError, source: Some(VMError { major_status: CONSTRAINT_NOT_SATISFIED, sub_status: None, message: None, exec_state: None, location: Module(ModuleId { address: iota, name: Identifier("transfer") }), indices: [], offsets: [] }), command: Some(1) } }

task 10 'programmable'. lines 58-60:
Error: Transaction Effects Status: Move Bytecode Verification Error. Please run the Bytecode Verifier for more information.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: VMVerificationOrDeserializationError, source: Some(VMError { major_status: CONSTRAINT_NOT_SATISFIED, sub_status: None, message: None, exec_state: None, location: Module(ModuleId { address: iota, name: Identifier("transfer") }), indices: [], offsets: [] }), command: Some(1) } }
