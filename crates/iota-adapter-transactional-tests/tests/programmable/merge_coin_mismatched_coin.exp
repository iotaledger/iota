processed 8 tasks

init:
A: object(0,0)

task 1 'publish'. lines 9-21:
created: object(1,0), object(1,1), object(1,2)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 10617200,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2 'programmable'. lines 23-25:
created: object(2,0)
mutated: object(0,0), object(1,2)
gas summary: computation_cost: 1000000, storage_cost: 4012800,  storage_rebate: 2663496, non_refundable_storage_fee: 26904

task 3 'view-object'. lines 27-27:
Owner: Account Address ( A )
Version: 3
Contents: iota::coin::Coin<test::fake::FAKE> {id: iota::object::UID {id: iota::object::ID {bytes: fake(2,0)}}, balance: iota::balance::Balance<test::fake::FAKE> {value: 100u64}}

task 4 'programmable'. lines 29-31:
Error: Transaction Effects Status: Invalid command argument at 1. The type of the value does not match the expected type
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: CommandArgumentError { arg_idx: 1, kind: TypeMismatch }, source: Some("Coins do not have the same type"), command: Some(1) } }

task 5 'programmable'. lines 33-34:
Error: Transaction Effects Status: Invalid command argument at 1. The type of the value does not match the expected type
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: CommandArgumentError { arg_idx: 1, kind: TypeMismatch }, source: Some("Coins do not have the same type"), command: Some(0) } }

task 6 'programmable'. lines 37-40:
Error: Transaction Effects Status: Invalid command argument at 2. The type of the value does not match the expected type
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: CommandArgumentError { arg_idx: 2, kind: TypeMismatch }, source: Some("Coins do not have the same type"), command: Some(2) } }

task 7 'programmable'. lines 42-45:
Error: Transaction Effects Status: Invalid command argument at 1. The type of the value does not match the expected type
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: CommandArgumentError { arg_idx: 1, kind: TypeMismatch }, source: Some("Coins do not have the same type"), command: Some(2) } }
