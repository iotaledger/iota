processed 5 tasks

init:
A: object(0,0)

task 1, lines 9-21:
//# publish --sender A
created: object(1,0), object(1,1), object(1,2)
mutated: object(0,0)
gas summary: computation_cost: 1000000, computation_cost_burned: 1000000, storage_cost: 10594400,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2, lines 23-25:
//# programmable --sender A --inputs object(1,2) 18446744073709551614 @A
//> 0: iota::coin::mint<test::fake::FAKE>(Input(0), Input(1));
//> TransferObjects([Result(0)], Input(2))
created: object(2,0)
mutated: object(0,0), object(1,2)
unchanged_shared: 0x0000000000000000000000000000000000000000000000000000000000000403
gas summary: computation_cost: 1000000, computation_cost_burned: 1000000, storage_cost: 3990000,  storage_rebate: 2675200, non_refundable_storage_fee: 0

task 3, lines 27-29:
//# programmable --sender A --inputs object(1,2) 1 @A
//> 0: iota::coin::mint<test::fake::FAKE>(Input(0), Input(1));
//> TransferObjects([Result(0)], Input(2))
Error: Transaction Effects Status: Move Runtime Abort. Location: iota::balance::increase_supply (function index 3) at offset 12, Abort Code: 1
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: MoveAbort(MoveLocation { module: ModuleId { address: iota, name: Identifier("balance") }, function: 3, instruction: 12, function_name: Some("increase_supply") }, 1), source: Some(VMError { major_status: ABORTED, sub_status: Some(1), message: Some("iota::balance::increase_supply at offset 12"), exec_state: None, location: Module(ModuleId { address: iota, name: Identifier("balance") }), indices: [], offsets: [(FunctionDefinitionIndex(3), 12)] }), command: Some(0) } }

task 4, lines 31-32:
//# programmable --sender A --inputs object(2,0)
//> MergeCoins(Input(0), [Input(0)]);
Error: Transaction Effects Status: Invalid command argument at 1. Invalid usage of value. Mutably borrowed values require unique usage. Immutably borrowed values cannot be taken or borrowed mutably. Taken values cannot be used again.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: CommandArgumentError { arg_idx: 1, kind: InvalidValueUsage }, source: None, command: Some(0) } }
