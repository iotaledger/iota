processed 9 tasks

init:
A: object(0,0)

task 1, lines 9-73:
//# publish
created: object(1,0)
mutated: object(0,1)
gas summary: computation_cost: 1000000, storage_cost: 9682400,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2, line 75:
//# run test::m::parent --sender A
created: object(2,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 2454800,  storage_rebate: 0, non_refundable_storage_fee: 0

task 3, lines 77-79:
//# run test::m::child --sender A
created: object(3,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 2272400,  storage_rebate: 980400, non_refundable_storage_fee: 0

task 4, line 80:
//# run test::m::add_field --sender A --args object(2,0) object(3,0)
Error: Transaction Effects Status: The shared object operation is not allowed.
Debug of error: SharedObjectOperationNotAllowed at command None

task 5, line 82:
//# view-object 3,0
Owner: Shared( 3 )
Version: 4
Contents: test::m::Child {
    id: iota::object::UID {
        id: iota::object::ID {
            bytes: fake(3,0),
        },
    },
    value: 0u64,
}

task 6, line 84:
//# run test::m::buy --sender A --args object(2,0)
Error: Transaction Effects Status: Move Runtime Abort. Location: iota::dynamic_field::borrow_child_object (function index 11) at offset 0, Abort Code: 1
Debug of error: MoveAbort(MoveLocation { module: ModuleId { address: iota, name: Identifier("dynamic_field") }, function: 11, instruction: 0, function_name: Some("borrow_child_object") }, 1) at command Some(0)

task 7, line 86:
//# view-object 3,0
Owner: Shared( 3 )
Version: 4
Contents: test::m::Child {
    id: iota::object::UID {
        id: iota::object::ID {
            bytes: fake(3,0),
        },
    },
    value: 0u64,
}

task 8, line 88:
//# run test::m::make_dynamic_remove_and_then_share
Error: Transaction Effects Status: Move Runtime Abort. Location: iota::dynamic_field::borrow_child_object (function index 11) at offset 0, Abort Code: 1
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: MoveAbort(MoveLocation { module: ModuleId { address: iota, name: Identifier("dynamic_field") }, function: 11, instruction: 0, function_name: Some("borrow_child_object") }, 1), source: Some(VMError { major_status: ABORTED, sub_status: Some(1), message: None, exec_state: None, location: Module(ModuleId { address: iota, name: Identifier("dynamic_field") }), indices: [], offsets: [(FunctionDefinitionIndex(11), 0)] }), command: Some(0) } }
