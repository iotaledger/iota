[workspace]
resolver = "2"

members = [
    "crates/*",
    "move-execution/v0/crates/move-bytecode-verifier",
    "move-execution/v0/crates/move-vm-runtime",
    "move-execution/v0/crates/move-stdlib",
]

# Dependencies that should be kept in sync through the whole workspace
[workspace.dependencies]
anyhow = "1.0"
arbitrary = { version = "1.1", features = ["derive", "derive_arbitrary"] }
bcs = "0.1"
better_any = { version = "0.2", features = ["derive"] }
clap = { version = "4", features = ["derive"] }
codespan = "0.11"
codespan-reporting = "0.11"
colored = "2.0"
datatest-stable = "0.1"
difference = "2.0"
dir-diff = "0.3"
dunce = "1.0"
ethnum = "1.0"
fail = "0.4"
file_diff = "1.0"
getrandom = "0.2"
hex = "0.4"
hex-literal = "0.4"
im = "15.1"
itertools = "0.13"
log = { version = "0.4", features = ["serde"] }
num = "0.4"
once_cell = "1.7"
parking_lot = "0.12"
petgraph = "0.5"
proptest = "1.0"
proptest-derive = "0.3"
rand = "0.8"
rayon = "1.5"
ref-cast = "1.0"
regex = "1.5"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
sha2 = "0.9"
sha3 = "0.9"
smallvec = "1.6"
tempfile = "3.2"
toml = "0.8"
toml_edit = "0.22"
tracing = "0.1"
vfs = "0.10"
walkdir = "2.3"

bytecode-interpreter-crypto = { path = "crates/bytecode-interpreter-crypto" }
enum-compat-util = { path = "crates/enum-compat-util" }
invalid-mutations = { path = "crates/invalid-mutations" }
module-generation = { path = "crates/module-generation" }
move-abstract-stack = { path = "crates/move-abstract-stack" }
move-binary-format = { path = "crates/move-binary-format" }
move-borrow-graph = { path = "crates/move-borrow-graph" }
move-bytecode-source-map = { path = "crates/move-bytecode-source-map" }
move-bytecode-utils = { path = "crates/move-bytecode-utils" }
move-bytecode-verifier = { path = "crates/move-bytecode-verifier" }
move-bytecode-viewer = { path = "crates/move-bytecode-viewer" }
move-cli = { path = "crates/move-cli" }
move-command-line-common = { path = "crates/move-command-line-common" }
move-compiler = { path = "crates/move-compiler" }
move-core-types = { path = "crates/move-core-types" }
move-coverage = { path = "crates/move-coverage" }
move-disassembler = { path = "crates/move-disassembler" }
move-docgen = { path = "crates/move-docgen" }
move-errmapgen = { path = "crates/move-errmapgen" }
move-ir-compiler = { path = "crates/move-ir-compiler" }
move-ir-to-bytecode = { path = "crates/move-ir-to-bytecode" }
move-ir-to-bytecode-syntax = { path = "crates/move-ir-to-bytecode-syntax" }
move-ir-types = { path = "crates/move-ir-types" }
move-model = { path = "crates/move-model" }
move-package = { path = "crates/move-package" }
move-proc-macros = { path = "crates/move-proc-macros" }
move-prover = { path = "crates/move-prover" }
move-prover-test-utils = { path = "crates/move-prover-test-utils" }
move-read-write-set-types = { path = "crates/move-read-write-set-types" }
move-stackless-bytecode = { path = "crates/move-stackless-bytecode" }
move-stackless-bytecode-interpreter = { path = "crates/move-stackless-bytecode-interpreter" }
move-stdlib = { path = "crates/move-stdlib" }
move-symbol-pool = { path = "crates/move-symbol-pool" }
move-transactional-test-runner = { path = "crates/move-transactional-test-runner" }
move-unit-test = { path = "crates/move-unit-test" }
move-vm-config = { path = "crates/move-vm-config" }
move-vm-profiler = { path = "crates/move-vm-profiler" }
move-vm-runtime = { path = "crates/move-vm-runtime" }
move-vm-test-utils = { path = "crates/move-vm-test-utils" }
move-vm-types = { path = "crates/move-vm-types" }

[profile.bench]
debug = true

[profile.dev]
debug = true

[profile.test.package.move-vm-integration-tests]
# opt-level 2 for move-compiler reduces the size of some of its
# (recursive) stack frames by up to 10x, avoiding stack overflows.
opt-level = 3

# use release settings to reduce memory pressure in the linking step in CI
[profile.ci]
inherits = "test"
debug = 0           # for saving disk space during linking
incremental = false
codegen-units = 16
