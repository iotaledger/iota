name: Rust lints

on:
  workflow_call:
    inputs:
      isRust:
        type: boolean
    secrets:
      SSH_PRIVATE_KEY_IOTA_CI:
        required: true
      SSH_GITHUB_KNOWN_HOSTS:
        required: true

concurrency:
  group: ext-rust-lints-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: "error"
  RUST_BACKTRACE: short
  CARGO_INCREMENTAL: 0

jobs:
  rustfmt:
    if: |
      !cancelled() && inputs.isRust
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        run: rustup toolchain install nightly --component rustfmt --allow-downgrade
      - name: Check Rust formatting
        run: |
          cargo +nightly ci-fmt-external

  cargo-deny:
    if: |
      !cancelled() && inputs.isRust
    name: cargo-deny (advisories, licenses, bans, ...)
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_IOTA_CI }}
          ssh-known-hosts: ${{ secrets.SSH_GITHUB_KNOWN_HOSTS }}
          use-git-cli: true

  clippy:
    if: |
      !cancelled() && success('rustfmt', 'cargo-deny') && inputs.isRust
    needs:
      - rustfmt
      - cargo-deny
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4

      # See '.cargo/config' for list of enabled/disabled clippy lints
      - name: Check Clippy Lints
        run: cargo ci-clippy-external
