name: Nightly checks

on:
  schedule:
    - cron: "0 0 * * *" # every day at midnight
  workflow_dispatch:

env:
  BINARY_LIST_FILE: "./binary-build-list.json"
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  release:
    name: build release binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          self-hosted, # ubuntu-x86_64
          macos-latest, # macos-arm64
        ]
    steps:
      - name: Install postgres (MacOS arm64)
        if: ${{ matrix.os == 'macos-latest' }}
        shell: bash
        # env:
        #   PQ_LIB_DIR: "$(brew --prefix libpq)/lib"
        #   LIBRARY_PATH: "/opt/homebrew/lib:$LIBRARY_PATH"
        #   PKG_CONFIG_PATH: "/opt/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH"
        #   PATH: "/opt/homebrew/bin:$PATH"
        # run: |
        #   brew install postgresql
        run: |
          df -h

  #     - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # pin@v4

  #     - name: cargo build
  #       uses: actions-rs/cargo@ae10961054e4aa8b4aa7dffede299aaf087aa33b # pin@v1.0.3
  #       with:
  #         command: build
  #         args: --all-targets --all-features --release

  # tests:
  #   uses: ./.github/workflows/_rust_tests.yml

  # external-tests:
  #   uses: ./.github/workflows/_external_rust_tests.yml

  # move-tests:
  #   uses: ./.github/workflows/_move_tests.yml

  # deny:
  #   uses: ./.github/workflows/_cargo_deny.yml

  # deny-external:
  #   uses: ./.github/workflows/_cargo_deny.yml
  #   with:
  #     manifest-path: external-crates/move/Cargo.toml

  # e2e:
  #   uses: ./.github/workflows/_e2e.yml

  # execution-cut:
  #   uses: ./.github/workflows/_execution_cut.yml

  # split-cluster:
  #   uses: ./.github/workflows/split_cluster.yml
