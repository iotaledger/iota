name: Move tests

on: workflow_call

concurrency:
  group: move-tests-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/develop' }}

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: "error"
  RUST_BACKTRACE: short
  CARGO_INCREMENTAL: 0

jobs:
  # This job ensures that Move unit tests are run if there are changes
  # to Move code but not Rust code (If there are Rust changes, they
  # will be run as part of a larger test suite).
  move-test:
    timeout-minutes: 10
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - uses: taiki-e/install-action@375e0c7f08a66b8c2ba7e7eef31a6f91043a81b0 # v2.44.38
        with:
          tool: nextest
      - name: Run move tests
        run: |
          cargo nextest run -E
          'package(iota-framework-tests)
          or (package(iota-core) and test(quorum_driver::))
          or package(iota-benchmark)
          or test(move_tests::)'

  move-simtest:
    timeout-minutes: 10
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - uses: taiki-e/install-action@375e0c7f08a66b8c2ba7e7eef31a6f91043a81b0 # v2.44.38
        with:
          tool: nextest
      - name: Run move tests
        run: |
          scripts/simtest/cargo-simtest simtest --profile ci -E
          'package(iota-framework-tests)
          or (package(iota-core) and test(quorum_driver::))
          or package(iota-benchmark)
          or test(move_tests::)'
