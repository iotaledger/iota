name: Rust crates

on:
  workflow_call:
    inputs:
      isRust:
        type: boolean
        required: true
      isMove:
        type: boolean
        required: true

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short
  RUSTDOCFLAGS: -D warnings

jobs:
  rust-tests:
    if: inputs.isRust
    uses: ./.github/workflows/_rust_tests.yml

  move-tests:
    if: inputs.isRust == false && inputs.isMove
    uses: ./.github/workflows/_move_tests.yml

  execution-cut:
    needs:
      - rust-tests
    if: inputs.isRust
    uses: ./.github/workflows/_execution_cut.yml
