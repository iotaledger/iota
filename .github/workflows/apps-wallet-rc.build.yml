name: Build Wallet App (RC)

on:
  workflow_dispatch:
    inputs:
      rc_version:
        description: "The RC numeric version (X.Y.Z.RC)"
        type: number
        required: true

env:
  DEFAULT_NETWORK: ${{ secrets.WALLET_RC_DEFAULT_NETWORK }}
  IOTA_NETWORKS: ${{ secrets.WALLET_RC_IOTA_NETWORKS }}
  APPS_BACKEND: ${{ secrets.WALLET_RC_APPS_BACKEND }}
  RC_VERSION: ${{ github.event.inputs.rc_version }}
  WALLET_RC: "true"

jobs:
  wallet-rc-build:
    permissions:
      contents: read
    runs-on: [self-hosted]
    steps:
      - name: Checking out ${{ env.iota_branch }}
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # pin@v3
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # pin@v4.0.0
      - name: Install Nodejs
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # pin@v4.0.2
        with:
          node-version: "20"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: apps/wallet
      - name: Create artifact name
        shell: bash
        run: |
          export artifact_name="iota-wallet-${{ steps.package-version.outputs.current-version }}-rc.${{ env.RC_VERSION }}"
          export WALLET_RC_VERSION=${{ env.RC_VERSION }}
          echo "artifact_name=${artifact_name}" >> $GITHUB_ENV
          echo "WALLET_RC_VERSION=${WALLET_RC_VERSION}" >> $GITHUB_ENV
      - name: Build Wallet
        run: pnpm wallet build:rc
        env: 
         WALLET_RC_VERSION: ${{ env.WALLET_RC_VERSION }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: |
            ./apps/wallet/dist
