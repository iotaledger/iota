name: Rust crates

on:
  push:
    branches:
      - "develop"
      - "devnet"
      - "testnet"
      - "mainnet"
      - "releases/iota-*-release"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/develop' }}

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short
  RUSTDOCFLAGS: -D warnings

jobs:
  diff:
    runs-on: [self-hosted]
    outputs:
      isRust: ${{ steps.diff.outputs.isRust }}
      isMove: ${{ steps.diff.outputs.isMove }}
      isReleaseNotesEligible: ${{ steps.diff.outputs.isReleaseNotesEligible }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # Pin v4.1.1
      - name: Detect Changes
        uses: "./.github/actions/diffs"
        id: diff

  lints:
    needs: diff
    if: needs.diff.outputs.isRust == 'true'
    uses: ./.github/workflows/_rust_lints.yml

  rust-tests:
    needs:
      - diff
      - lints
    if: needs.diff.outputs.isRust == 'true'
    uses: ./.github/workflows/_rust_tests.yml

  move-tests:
    needs:
      - diff
    if: needs.diff.outputs.isRust == 'false' && needs.diff.outputs.isMove == 'true'
    uses: ./.github/workflows/_move_tests.yml

  execution-cut:
    needs:
      - diff
      - lints
      - rust-tests
    if: needs.diff.outputs.isRust == 'true'
    uses: ./.github/workflows/_execution_cut.yml

  release-notes-description-check:
    name: release-notes-check
    needs: diff
    if: needs.diff.outputs.isReleaseNotesEligible == 'true'
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # Pin v4.1.1
      - name: Check Pull Request Description
        shell: bash
        run: |
          export PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          export DESCRIPTION=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/iotaledger/iota/pulls/${PR_NUMBER}" \
            | jq --raw-output .body)

          if [[ "${DESCRIPTION}" == *"[x]"*  ]]; then
            if [[ "${DESCRIPTION}" =~ Release[[:space:]]notes[[:space:]]+.* ]]; then
              exit 0
            else
              echo "At least one '[x]' was checked under 'Type of Change (Check all that apply)', you need to add a blob under the 'Release Notes' section."
              exit 1
            fi
          fi
