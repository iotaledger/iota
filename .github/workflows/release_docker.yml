name: Publish Docker Images

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      iota_node:
        type: boolean
        description: "Release iota-node image"
        required: false
        default: false
      iota_indexer:
        type: boolean
        description: "Release iota-indexer image"
        required: false
        default: false
      iota_tools:
        type: boolean
        description: "Release iota-tools image"
        required: false
        default: false
      iota_graphql_rpc:
        type: boolean
        description: "Release iota-graphql-rpc image"
        required: false
        default: false

jobs:
  build-iota-node:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.iota_node == 'true' || github.event_name == 'release'
    runs-on: self-hosted
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Read Rust toolchain version from TOML
        id: read_toolchain
        run: |
          TOOLCHAIN_VERSION=$(grep -oE 'channel = "[^"]+' ./rust-toolchain.toml | sed 's/channel = "//')
          echo "TOOLCHAIN_VERSION=${TOOLCHAIN_VERSION}" >> $GITHUB_ENV

      - name: Log Rust toolchain version
        run: echo "Rust toolchain version is ${{ env.TOOLCHAIN_VERSION }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Docker meta for iota-node
        id: meta-node
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: iotaledger/iota-node
          # mapping semver tags to networks
          # v{MAJOR}.{MINOR}.{PATCH}-alpha -> alphanet
          # v{MAJOR}.{MINOR}.{PATCH}-beta -> devnet
          # v{MAJOR}.{MINOR}.{PATCH}-rc -> testnet
          # v{MAJOR}.{MINOR}.{PATCH} -> mainnet
          tags: |
            type=raw,value={{sha}},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value=latest,enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value={{tag}},enable=${{ github.event_name == 'release' }}
            type=raw,value=alphanet,enable=${{ github.event_name == 'release' && contains(github.ref, '-alpha') }}
            type=raw,value=devnet,enable=${{ github.event_name == 'release' && contains(github.ref, '-beta') }}
            type=raw,value=testnet,enable=${{ github.event_name == 'release' && contains(github.ref, '-rc') }}
            type=raw,value=mainnet,enable=${{ github.event_name == 'release' && !contains(github.ref, '-alpha') && !contains(github.ref, '-beta') && !contains(github.ref, '-rc') }}

      - name: Login to Docker Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}

      - name: Get git revision and build date
        id: git-info
        run: |
          echo "GIT_REVISION=$(git describe --always --abbrev=12 --dirty --exclude '*')" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Build and push Docker image for iota-node
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          file: docker/iota-node/Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta-node.outputs.tags }}
          push: true
          pull: true
          build-args: |
            GIT_REVISION=${{ env.GIT_REVISION }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            RUST_IMAGE_VERSION=${{ env.TOOLCHAIN_VERSION }}-bookworm

  build-iota-indexer:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.iota_indexer == 'true' || github.event_name == 'release'
    runs-on: self-hosted
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Read Rust toolchain version from TOML
        id: read_toolchain
        run: |
          TOOLCHAIN_VERSION=$(grep -oE 'channel = "[^"]+' ./rust-toolchain.toml | sed 's/channel = "//')
          echo "TOOLCHAIN_VERSION=${TOOLCHAIN_VERSION}" >> $GITHUB_ENV

      - name: Log Rust toolchain version
        run: echo "Rust toolchain version is ${{ env.TOOLCHAIN_VERSION }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Docker meta for iota-indexer
        id: meta-indexer
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: iotaledger/iota-indexer
          # mapping semver tags to networks
          # v{MAJOR}.{MINOR}.{PATCH}-alpha -> alphanet
          # v{MAJOR}.{MINOR}.{PATCH}-beta -> devnet
          # v{MAJOR}.{MINOR}.{PATCH}-rc -> testnet
          # v{MAJOR}.{MINOR}.{PATCH} -> mainnet
          tags: |
            type=raw,value={{sha}},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value=latest,enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value={{tag}},enable=${{ github.event_name == 'release' }}
            type=raw,value=alphanet,enable=${{ github.event_name == 'release' && contains(github.ref, '-alpha') }}
            type=raw,value=devnet,enable=${{ github.event_name == 'release' && contains(github.ref, '-beta') }}
            type=raw,value=testnet,enable=${{ github.event_name == 'release' && contains(github.ref, '-rc') }}
            type=raw,value=mainnet,enable=${{ github.event_name == 'release' && !contains(github.ref, '-alpha') && !contains(github.ref, '-beta') && !contains(github.ref, '-rc') }}

      - name: Login to Docker Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}

      - name: Get git revision and build date
        id: git-info
        run: |
          echo "GIT_REVISION=$(git describe --always --abbrev=12 --dirty --exclude '*')" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Build and push Docker image for iota-indexer
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          file: docker/iota-indexer/Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta-indexer.outputs.tags }}
          push: true
          pull: true
          build-args: |
            GIT_REVISION=${{ env.GIT_REVISION }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            RUST_IMAGE_VERSION=${{ env.TOOLCHAIN_VERSION }}-bookworm

  build-iota-tools:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.iota_tools == 'true' || github.event_name == 'release'
    runs-on: self-hosted
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Read Rust toolchain version from TOML
        id: read_toolchain
        run: |
          TOOLCHAIN_VERSION=$(grep -oE 'channel = "[^"]+' ./rust-toolchain.toml | sed 's/channel = "//')
          echo "TOOLCHAIN_VERSION=${TOOLCHAIN_VERSION}" >> $GITHUB_ENV

      - name: Log Rust toolchain version
        run: echo "Rust toolchain version is ${{ env.TOOLCHAIN_VERSION }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Docker meta for iota-tools
        id: meta-tools
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: iotaledger/iota-tools
          # mapping semver tags to networks
          # v{MAJOR}.{MINOR}.{PATCH}-alpha -> alphanet
          # v{MAJOR}.{MINOR}.{PATCH}-beta -> devnet
          # v{MAJOR}.{MINOR}.{PATCH}-rc -> testnet
          # v{MAJOR}.{MINOR}.{PATCH} -> mainnet
          tags: |
            type=raw,value={{sha}},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value=latest,enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value={{tag}},enable=${{ github.event_name == 'release' }}
            type=raw,value=alphanet,enable=${{ github.event_name == 'release' && contains(github.ref, '-alpha') }}
            type=raw,value=devnet,enable=${{ github.event_name == 'release' && contains(github.ref, '-beta') }}
            type=raw,value=testnet,enable=${{ github.event_name == 'release' && contains(github.ref, '-rc') }}
            type=raw,value=mainnet,enable=${{ github.event_name == 'release' && !contains(github.ref, '-alpha') && !contains(github.ref, '-beta') && !contains(github.ref, '-rc') }}

      - name: Login to Docker Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}

      - name: Get git revision and build date
        id: git-info
        run: |
          echo "GIT_REVISION=$(git describe --always --abbrev=12 --dirty --exclude '*')" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Build and push Docker image for iota-tools
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          file: docker/iota-tools/Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta-tools.outputs.tags }}
          push: true
          pull: true
          build-args: |
            GIT_REVISION=${{ env.GIT_REVISION }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            RUST_IMAGE_VERSION=${{ env.TOOLCHAIN_VERSION }}-bookworm

  build-iota-graphql-rpc:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.iota_graphql_rpc == 'true' || github.event_name == 'release'
    runs-on: self-hosted
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Read Rust toolchain version from TOML
        id: read_toolchain
        run: |
          TOOLCHAIN_VERSION=$(grep -oE 'channel = "[^"]+' ./rust-toolchain.toml | sed 's/channel = "//')
          echo "TOOLCHAIN_VERSION=${TOOLCHAIN_VERSION}" >> $GITHUB_ENV

      - name: Log Rust toolchain version
        run: echo "Rust toolchain version is ${{ env.TOOLCHAIN_VERSION }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Docker meta for iota-graphql-rpc
        id: meta-tools
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: iotaledger/iota-graphql-rpc
          # mapping semver tags to networks
          # v{MAJOR}.{MINOR}.{PATCH}-alpha -> alphanet
          # v{MAJOR}.{MINOR}.{PATCH}-beta -> devnet
          # v{MAJOR}.{MINOR}.{PATCH}-rc -> testnet
          # v{MAJOR}.{MINOR}.{PATCH} -> mainnet
          tags: |
            type=raw,value={{sha}},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value=latest,enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value={{tag}},enable=${{ github.event_name == 'release' }}
            type=raw,value=alphanet,enable=${{ github.event_name == 'release' && contains(github.ref, '-alpha') }}
            type=raw,value=devnet,enable=${{ github.event_name == 'release' && contains(github.ref, '-beta') }}
            type=raw,value=testnet,enable=${{ github.event_name == 'release' && contains(github.ref, '-rc') }}
            type=raw,value=mainnet,enable=${{ github.event_name == 'release' && !contains(github.ref, '-alpha') && !contains(github.ref, '-beta') && !contains(github.ref, '-rc') }}

      - name: Login to Docker Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}

      - name: Get git revision and build date
        id: git-info
        run: |
          echo "GIT_REVISION=$(git describe --always --abbrev=12 --dirty --exclude '*')" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Build and push Docker image for iota-graphql-rpc
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          file: docker/iota-graphql-rpc/Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta-tools.outputs.tags }}
          push: true
          pull: true
          build-args: |
            GIT_REVISION=${{ env.GIT_REVISION }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            RUST_IMAGE_VERSION=${{ env.TOOLCHAIN_VERSION }}-bookworm
