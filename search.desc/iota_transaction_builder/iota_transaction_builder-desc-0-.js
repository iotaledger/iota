searchState.loadedDescShard("iota_transaction_builder", 0, "Create an unsigned batched transaction, useful for the …\nReturns the argument unchanged.\nGet the latest object ref for an object.\nGet the object references for a list of object IDs\nCalls <code>U::from(self)</code>.\nBuild a <code>TransactionKind::ProgrammableTransaction</code> that …\nCall a move function from a published package.\nBuild a <code>TransactionKind::ProgrammableTransaction</code> that …\nTake multiple coins and send to multiple addresses …\nTake multiple IOTA coins and send them to one recipient, …\nBuild a <code>TransactionKind::ProgrammableTransaction</code> that …\nTake multiple IOTA coins and send to multiple addresses …\nConstruct a transaction kind for the PayIota transaction …\nBuild a <code>TransactionKind::ProgrammableTransaction</code> that …\nPublish a new move package.\nBuild a <code>TransactionKind::ProgrammableTransaction</code> that …\nAdd stake to a validator’s staking pool using multiple …\nAdd stake to a validator’s staking pool using a …\nWithdraw stake from a validator’s staking pool.\nWithdraw timelocked stake from a validator’s staking …\nConvert provided JSON arguments for a move function to …\nAdd a single move call to the provided …\nConstruct a transaction kind for the SplitCoin transaction …\nTransfer IOTA from the provided coin object to the …\nBuild a <code>TransactionKind::ProgrammableTransaction</code> that …\nTransfer an object to the specified recipient address.\nBuild a <code>TransactionKind::ProgrammableTransaction</code> that …\nConstruct the transaction data from a transaction kind, …\nConstruct the transaction data for a dry run\nUpgrade an existing move package.\nBuild a <code>TransactionKind::ProgrammableTransaction</code> that …")