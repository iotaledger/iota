[workspace]
resolver = "2"

exclude = [
  "external-crates/move/crates/bytecode-interpreter-crypto",
  "external-crates/move/crates/bytecode-interpreter-testsuite",
  "external-crates/move/crates/bytecode-verifier-libfuzzer",
  "external-crates/move/crates/bytecode-verifier-tests",
  "external-crates/move/crates/bytecode-verifier-transactional-tests",
  "external-crates/move/crates/enum-compat-util",
  "external-crates/move/crates/invalid-mutations",
  "external-crates/move/crates/language-benchmarks",
  "external-crates/move/crates/module-generation",
  "external-crates/move/crates/move-abstract-stack",
  "external-crates/move/crates/move-analyzer",
  "external-crates/move/crates/move-binary-format",
  "external-crates/move/crates/move-borrow-graph",
  "external-crates/move/crates/move-bytecode-source-map",
  "external-crates/move/crates/move-bytecode-utils",
  "external-crates/move/crates/move-bytecode-verifier",
  "external-crates/move/crates/move-bytecode-viewer",
  "external-crates/move/crates/move-cli",
  "external-crates/move/crates/move-command-line-common",
  "external-crates/move/crates/move-compiler",
  "external-crates/move/crates/move-compiler-transactional-tests",
  "external-crates/move/crates/move-core-types",
  "external-crates/move/crates/move-coverage",
  "external-crates/move/crates/move-disassembler",
  "external-crates/move/crates/move-docgen",
  "external-crates/move/crates/move-errmapgen",
  "external-crates/move/crates/move-explain",
  "external-crates/move/crates/move-ir-compiler",
  "external-crates/move/crates/move-ir-compiler-transactional-tests",
  "external-crates/move/crates/move-ir-to-bytecode",
  "external-crates/move/crates/move-ir-to-bytecode-syntax",
  "external-crates/move/crates/move-ir-types",
  "external-crates/move/crates/move-model",
  "external-crates/move/crates/move-package",
  "external-crates/move/crates/move-proc-macros",
  "external-crates/move/crates/move-prover",
  "external-crates/move/crates/move-prover-test-utils",
  "external-crates/move/crates/move-read-write-set-types",
  "external-crates/move/crates/move-stackless-bytecode",
  "external-crates/move/crates/move-stackless-bytecode-interpreter",
  "external-crates/move/crates/move-stdlib",
  "external-crates/move/crates/move-symbol-pool",
  "external-crates/move/crates/move-transactional-test-runner",
  "external-crates/move/crates/move-unit-test",
  "external-crates/move/crates/move-vm-config",
  "external-crates/move/crates/move-vm-integration-tests",
  "external-crates/move/crates/move-vm-profiler",
  "external-crates/move/crates/move-vm-runtime",
  "external-crates/move/crates/move-vm-test-utils",
  "external-crates/move/crates/move-vm-transactional-tests",
  "external-crates/move/crates/move-vm-types",
  "external-crates/move/crates/serializer-tests",
  "external-crates/move/crates/test-generation",
  "external-crates/move/move-execution/v0/crates/move-bytecode-verifier",
  "external-crates/move/move-execution/v0/crates/move-stdlib",
  "external-crates/move/move-execution/v0/crates/move-vm-runtime",
  "sdk/move-bytecode-template",
]

members = [
  "consensus/config",
  "consensus/core",
  "crates/iota",
  "crates/iota-adapter-transactional-tests",
  "crates/iota-analytics-indexer",
  "crates/iota-analytics-indexer-derive",
  "crates/iota-archival",
  "crates/iota-authority-aggregation",
  "crates/iota-aws-orchestrator",
  "crates/iota-benchmark",
  "crates/iota-cluster-test",
  "crates/iota-common",
  "crates/iota-config",
  "crates/iota-core",
  "crates/iota-cost",
  "crates/iota-data-ingestion",
  "crates/iota-data-ingestion-core",
  "crates/iota-e2e-tests",
  "crates/iota-enum-compat-util",
  "crates/iota-faucet",
  "crates/iota-framework",
  "crates/iota-framework-snapshot",
  "crates/iota-framework-tests",
  "crates/iota-genesis-builder",
  "crates/iota-graphql-e2e-tests",
  "crates/iota-graphql-rpc",
  "crates/iota-graphql-rpc-client",
  "crates/iota-graphql-rpc-headers",
  "crates/iota-indexer",
  "crates/iota-json",
  "crates/iota-json-rpc",
  "crates/iota-json-rpc-api",
  "crates/iota-json-rpc-tests",
  "crates/iota-json-rpc-types",
  "crates/iota-keys",
  "crates/iota-light-client",
  "crates/iota-macros",
  "crates/iota-metric-checker",
  "crates/iota-metrics",
  "crates/iota-move",
  "crates/iota-move-build",
  "crates/iota-network",
  "crates/iota-network-stack",
  "crates/iota-node",
  "crates/iota-open-rpc",
  "crates/iota-open-rpc-macros",
  "crates/iota-package-resolver",
  "crates/iota-proc-macros",
  "crates/iota-protocol-config",
  "crates/iota-protocol-config-macros",
  "crates/iota-replay",
  "crates/iota-rest-api",
  "crates/iota-rosetta",
  "crates/iota-rpc-loadgen",
  "crates/iota-sdk",
  "crates/iota-simulator",
  "crates/iota-single-node-benchmark",
  "crates/iota-snapshot",
  "crates/iota-source-validation",
  "crates/iota-source-validation-service",
  "crates/iota-storage",
  "crates/iota-surfer",
  "crates/iota-swarm",
  "crates/iota-swarm-config",
  "crates/iota-test-transaction-builder",
  "crates/iota-test-validator",
  "crates/iota-tool",
  "crates/iota-transaction-builder",
  "crates/iota-transaction-checks",
  "crates/iota-transactional-test-runner",
  "crates/iota-types",
  "crates/iota-upgrade-compatibility-transactional-tests",
  "crates/iota-util-mem",
  "crates/iota-util-mem-derive",
  "crates/iota-verifier-transactional-tests",
  "crates/prometheus-closure-metric",
  "crates/shared-crypto",
  "crates/simulacrum",
  "crates/telemetry-subscribers",
  "crates/test-cluster",
  "crates/transaction-fuzzer",
  "crates/typed-store",
  "crates/typed-store-derive",
  "crates/typed-store-error",
  "docs/examples/rust",
  "iota-execution",
  "iota-execution/cut",
  "iota-execution/latest/iota-adapter",
  "iota-execution/latest/iota-move-natives",
  "iota-execution/latest/iota-verifier",
  "iota-execution/v0/iota-adapter",
  "iota-execution/v0/iota-move-natives",
  "iota-execution/v0/iota-verifier",
  "narwhal/config",
  "narwhal/crypto",
  "narwhal/executor",
  "narwhal/network",
  "narwhal/node",
  "narwhal/primary",
  "narwhal/storage",
  "narwhal/test-utils",
  "narwhal/types",
  "narwhal/worker",
]

[workspace.package]
# This version string will be inherited by iota-core, iota-faucet, iota-node, iota-tools, iota-sdk, iota-move-build, and iota crates.
version = "0.1.4"

[profile.release]
# debug = 1 means line charts only, which is minimum needed for good stack traces
debug = 1
# Write debug info into a separate file.
split-debuginfo = 'packed'
# Without stripping, iota binary size would be > 1GB.
strip = 'debuginfo'
# Exit process with SIGABRT when any thread panics
panic = 'abort'

# Same as release, but build binary with debug symbols (binary size will be ~ 1GB).
[profile.release-dbgsym]
inherits = "release"
split-debuginfo = 'off'
strip = 'none'

# Inherits from the release profile above.
[profile.bench]
# For convenience.
strip = 'none'

[profile.test.package.move-compiler]
# opt-level 2 for move-compiler reduces the size of some of its
# (recursive) stack frames by up to 10x, avoiding stack overflows.
opt-level = 2

[profile.simulator]
inherits = "test"
debug = true
debug-assertions = true
overflow-checks = true
# opt-level 1 gives >5x speedup for simulator tests without slowing down build times very much.
opt-level = 1

# Dependencies that should be kept in sync through the whole workspace
[workspace.dependencies]
anyhow = "1.0"
arc-swap = { version = "1.5", features = ["serde"] }
assert_cmd = "2.0"
async-graphql = "7.0"
async-recursion = "1.0"
async-trait = "0.1"
aws-config = { version = "1.5", features = ["behavior-version-latest"] }
axum = { version = "0.7", default-features = false, features = ["tokio", "http1", "http2", "json", "matched-path", "original-uri", "form", "query", "ws"] }
axum-extra = "0.9"
backoff = { version = "0.4", features = ["tokio"] }
base64 = "0.22"
base64-url = "3.0"
bcs = "0.1"
better_any = { version = "0.2", features = ["derive"] }
bincode = "1.3"
bip32 = "0.5"
byteorder = "1.4"
bytes = { version = "1.5", features = ["serde"] }
cached = { version = "0.53", features = ["async"] }
camino = "1.1"
cfg-if = "1.0"
chrono = { version = "0.4", features = ["clock", "serde"] }
clap = { version = "4.5", features = ["derive", "wrap_help"] }
colored = "2.0"
comfy-table = "7.1"
const-str = "0.5"
criterion = { version = "0.5", features = ["async", "async_tokio", "html_reports"] }
crossterm = "0.28"
csv = "1.2"
dashmap = "6.0"
datatest-stable = { git = "https://github.com/nextest-rs/datatest-stable.git", rev = "72db7f6d1bbe36a5407e96b9488a581f763e106f" }
derivative = "2.2"
diesel = { version = "2.2", features = ["chrono", "postgres", "r2d2", "serde_json", "64-column-tables", "i-implement-a-third-party-backend-and-opt-into-breaking-changes", "postgres_backend"] }
dirs = "5.0"
ed25519-consensus = { version = "2.0", features = ["serde"] }
either = "1.8"
enum_dispatch = "^0.3"
expect-test = "1.4"
eyre = "0.6"
fdlimit = "0.3"
flate2 = "1.0"
fs_extra = "1.3"
futures = "0.3"
git-version = "0.3"
governor = "0.6"
hdrhistogram = "7.5"
hex = "0.4"
http = "1.1"
http-body-util = "0.1"
humantime = "2.1"
hyper = { version = "1.3", features = ["http2"] }
hyper-util = { version = "0.1", default-features = false }
im = "15.1"
indexmap = { version = "2.1", features = ["serde"] }
indicatif = "0.17"
insta = { version = "1.21", features = ["redactions", "yaml", "json"] }
integer-encoding = "4.0"
itertools = "0.13"
json_to_table = "0.6" # Version 0.8 is incompatable with tabled
jsonrpsee = { version = "0.24", features = ["server", "macros", "client", "ws-client", "http-client"] }
leb128 = "0.2"
lru = "0.12"
mockall = "0.13"
more-asserts = "0.3"
msim = { git = "https://github.com/MystenLabs/mysten-sim.git", rev = "6f88ec84644cb1a6809c010f1f534d0d09e0cd89", package = "msim" }
notify = "6.1"
num-bigint = "0.4"
num_cpus = "1.15"
num_enum = "0.7"
object_store = { version = "0.10", features = ["aws", "gcp", "azure", "http"] }
once_cell = "1.18"
parking_lot = "0.12"
pretty_assertions = "1.3"
proc-macro2 = "1.0"
prometheus = "0.13"
proptest = "1.1"
proptest-derive = "0.5"
prost = "0.13"
quinn-proto = "0.10" # Version 0.11 is incompatable with prometheus
quote = "1.0"
rand = "0.8"
regex = "1.7"
reqwest = { version = "0.12", default-features = false, features = ["blocking", "json", "rustls-tls"] }
roaring = "0.10"
rocksdb = { version = "0.22", features = ["snappy", "lz4", "zstd", "zlib", "multi-threaded-cf"], default-features = false }
rstest = "0.22"
schemars = { version = "0.8", features = ["either"] }
scopeguard = "1.1"
serde = { version = "1.0", features = ["derive", "rc"] }
serde-reflection = "0.4"
serde_json = { version = "1.0", features = ["preserve_order", "arbitrary_precision"] }
serde_with = { version = "2.3", features = ["hex"] } # Version 3 is incompatable with fastcrypto
serde_yaml = "0.9"
shellexpand = "3.1"
signature = "2.2"
similar = "2.4"
smallvec = "1.10"
snap = "1.1"
static_assertions = "1.1"
strum = { version = "0.26", features = ["derive"] }
syn = { version = "1.0", features = ["full", "derive", "extra-traits"] }
tabled = "0.12" # Version 0.16 is incompatable with ratatui
tap = "1.0"
tempfile = "3.12"
test-fuzz = "5.2"
thiserror = "1.0"
tokio = "1.36"
tokio-stream = { version = "0.1", features = ["sync", "net"] }
tokio-util = "0.7"
toml = { version = "0.8", features = ["preserve_order"] }
tonic = { version = "0.12", features = ["transport", "tls"] }
tonic-build = { version = "0.12", features = ["prost", "transport"] }
tonic-health = "0.12"
tower = { version = "0.4", features = ["full", "util", "timeout", "load-shed", "limit"] }
tower-http = { version = "0.5", features = ["cors", "full", "trace", "set-header", "propagate-header"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", default-features = false, features = ["std", "smallvec", "fmt", "ansi", "time", "json", "registry", "env-filter"] }
unescape = "0.1"
url = "2.3"
uuid = { version = "1.1", features = ["v4", "fast-rng"] }

# Move dependencies
move-abstract-stack = { path = "external-crates/move/crates/move-abstract-stack" }
move-binary-format = { path = "external-crates/move/crates/move-binary-format" }
move-bytecode-utils = { path = "external-crates/move/crates/move-bytecode-utils" }
move-cli = { path = "external-crates/move/crates/move-cli" }
move-command-line-common = { path = "external-crates/move/crates/move-command-line-common" }
move-compiler = { path = "external-crates/move/crates/move-compiler" }
move-core-types = { path = "external-crates/move/crates/move-core-types" }
move-disassembler = { path = "external-crates/move/crates/move-disassembler" }
move-ir-types = { path = "external-crates/move/crates/move-ir-types" }
move-package = { path = "external-crates/move/crates/move-package" }
move-symbol-pool = { path = "external-crates/move/crates/move-symbol-pool" }
move-unit-test = { path = "external-crates/move/crates/move-unit-test" }
move-vm-config = { path = "external-crates/move/crates/move-vm-config" }
move-vm-profiler = { path = "external-crates/move/crates/move-vm-profiler" }
move-vm-types = { path = "external-crates/move/crates/move-vm-types" }

fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "fastcrypto-zkp-v0.1.3", package = "fastcrypto" }
fastcrypto-tbls = { git = "https://github.com/MystenLabs/fastcrypto", rev = "fastcrypto-zkp-v0.1.3", package = "fastcrypto-tbls" }
fastcrypto-zkp = { git = "https://github.com/MystenLabs/fastcrypto", rev = "fastcrypto-zkp-v0.1.3", package = "fastcrypto-zkp" }

# anemo dependencies
anemo = { git = "https://github.com/mystenlabs/anemo.git", rev = "26d415eb9aa6a2417be3c03c57d6e93c30bd1ad7" }
anemo-build = { git = "https://github.com/mystenlabs/anemo.git", rev = "26d415eb9aa6a2417be3c03c57d6e93c30bd1ad7" }
anemo-cli = { git = "https://github.com/mystenlabs/anemo.git", rev = "26d415eb9aa6a2417be3c03c57d6e93c30bd1ad7" }
anemo-tower = { git = "https://github.com/mystenlabs/anemo.git", rev = "26d415eb9aa6a2417be3c03c57d6e93c30bd1ad7" }

### Workspace Members ###
iota = { path = "crates/iota" }
iota-adapter-transactional-tests = { path = "crates/iota-adapter-transactional-tests" }
iota-analytics-indexer = { path = "crates/iota-analytics-indexer" }
iota-analytics-indexer-derive = { path = "crates/iota-analytics-indexer-derive" }
iota-archival = { path = "crates/iota-archival" }
iota-authority-aggregation = { path = "crates/iota-authority-aggregation" }
iota-benchmark = { path = "crates/iota-benchmark" }
iota-cluster-test = { path = "crates/iota-cluster-test" }
iota-common = { path = "crates/iota-common" }
iota-config = { path = "crates/iota-config" }
iota-core = { path = "crates/iota-core" }
iota-cost = { path = "crates/iota-cost" }
iota-data-ingestion = { path = "crates/iota-data-ingestion" }
iota-data-ingestion-core = { path = "crates/iota-data-ingestion-core" }
iota-e2e-tests = { path = "crates/iota-e2e-tests" }
iota-enum-compat-util = { path = "crates/iota-enum-compat-util" }
iota-faucet = { path = "crates/iota-faucet" }
iota-framework = { path = "crates/iota-framework" }
iota-framework-snapshot = { path = "crates/iota-framework-snapshot" }
iota-framework-tests = { path = "crates/iota-framework-tests" }
iota-genesis-builder = { path = "crates/iota-genesis-builder" }
iota-graphql-rpc = { path = "crates/iota-graphql-rpc" }
iota-graphql-rpc-client = { path = "crates/iota-graphql-rpc-client" }
iota-graphql-rpc-headers = { path = "crates/iota-graphql-rpc-headers" }
iota-indexer = { path = "crates/iota-indexer" }
iota-json = { path = "crates/iota-json" }
iota-json-rpc = { path = "crates/iota-json-rpc" }
iota-json-rpc-api = { path = "crates/iota-json-rpc-api" }
iota-json-rpc-types = { path = "crates/iota-json-rpc-types" }
iota-keys = { path = "crates/iota-keys" }
iota-macros = { path = "crates/iota-macros" }
iota-metric-checker = { path = "crates/iota-metric-checker" }
iota-metrics = { path = "crates/iota-metrics" }
iota-move = { path = "crates/iota-move" }
iota-move-build = { path = "crates/iota-move-build" }
iota-network = { path = "crates/iota-network" }
iota-network-stack = { path = "crates/iota-network-stack" }
iota-node = { path = "crates/iota-node" }
iota-open-rpc = { path = "crates/iota-open-rpc" }
iota-open-rpc-macros = { path = "crates/iota-open-rpc-macros" }
iota-package-resolver = { path = "crates/iota-package-resolver" }
iota-proc-macros = { path = "crates/iota-proc-macros" }
iota-protocol-config = { path = "crates/iota-protocol-config" }
iota-protocol-config-macros = { path = "crates/iota-protocol-config-macros" }
iota-replay = { path = "crates/iota-replay" }
iota-rest-api = { path = "crates/iota-rest-api" }
iota-rosetta = { path = "crates/iota-rosetta" }
iota-rpc-loadgen = { path = "crates/iota-rpc-loadgen" }
iota-sdk = { path = "crates/iota-sdk" }
iota-simulator = { path = "crates/iota-simulator" }
iota-snapshot = { path = "crates/iota-snapshot" }
iota-source-validation = { path = "crates/iota-source-validation" }
iota-source-validation-service = { path = "crates/iota-source-validation-service" }
iota-storage = { path = "crates/iota-storage" }
iota-surfer = { path = "crates/iota-surfer" }
iota-swarm = { path = "crates/iota-swarm" }
iota-swarm-config = { path = "crates/iota-swarm-config" }
iota-test-transaction-builder = { path = "crates/iota-test-transaction-builder" }
iota-test-validator = { path = "crates/iota-test-validator" }
iota-tool = { path = "crates/iota-tool" }
iota-transaction-builder = { path = "crates/iota-transaction-builder" }
iota-transaction-checks = { path = "crates/iota-transaction-checks" }
iota-transactional-test-runner = { path = "crates/iota-transactional-test-runner" }
iota-types = { path = "crates/iota-types" }
iota-upgrade-compatibility-transactional-tests = { path = "crates/iota-upgrade-compatibility-transactional-tests" }
iota-util-mem = { path = "crates/iota-util-mem" }
iota-util-mem-derive = { path = "crates/iota-util-mem-derive" }
iota-verifier-transactional-tests = { path = "crates/iota-verifier-transactional-tests" }
prometheus-closure-metric = { path = "crates/prometheus-closure-metric" }
shared-crypto = { path = "crates/shared-crypto" }
simulacrum = { path = "crates/simulacrum" }
telemetry-subscribers = { path = "crates/telemetry-subscribers" }
test-cluster = { path = "crates/test-cluster" }
transaction-fuzzer = { path = "crates/transaction-fuzzer" }
typed-store = { path = "crates/typed-store" }
typed-store-derive = { path = "crates/typed-store-derive" }
typed-store-error = { path = "crates/typed-store-error" }

consensus-config = { path = "consensus/config" }
consensus-core = { path = "consensus/core" }

narwhal-config = { path = "narwhal/config" }
narwhal-crypto = { path = "narwhal/crypto" }
narwhal-executor = { path = "narwhal/executor" }
narwhal-network = { path = "narwhal/network" }
narwhal-node = { path = "narwhal/node" }
narwhal-primary = { path = "narwhal/primary" }
narwhal-storage = { path = "narwhal/storage" }
narwhal-test-utils = { path = "narwhal/test-utils" }
narwhal-types = { path = "narwhal/types" }
narwhal-worker = { path = "narwhal/worker" }

iota-execution = { path = "iota-execution" }
