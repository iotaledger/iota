{
    "clone": {
        "ignore": {
            "folders": [
                "target$",
                "node_modules$",
                "\\.turbo$",
                "\\.pnpm-store$",
                "(?<!package_a|package_b)\/build\/"
            ],
            "files": [],
            "file_types": [
                "\\.key\\b"
            ]
        }
    },
    "deletions": {
        "crates": [
            "sui-common"
        ],
        "folders": [],
        "files": []
    },
    "path_renames": {
        "ignore": {
            "folders": [
                "^target$",
                "^\\.git$"
            ],
            "files": [
                "mysten_labs_red\\.svg",
                "sui-lutris\\.pdf"
            ],
            "file_types": []
        },
        "patterns": [
            {
                "regex": "suiscan",
                "replacement": "iotascan"
            },
            {
                "regex": "suivision",
                "replacement": "iotavision"
            },
            {
                "regex": "mysten-network",
                "replacement": "iota-network-stack"
            },
            {
                "regex": "(?<![A-Z])(Sui)(?=[^a-z]|$)",
                "replacement": "Iota"
            },
            {
                "regex": "(?<![a-zA-Z])(sui)(?=[^a-z]|$)",
                "replacement": "iota"
            },
            {
                "regex": "(?<![a-zA-Z])(mysten)(?=[^a-z]|$)(?!_labs_red)",
                "replacement": "iota"
            },
            {
                "regex": "suiop",
                "replacement": "iotaop"
            },
            {
                "regex": "ISuiBridge",
                "replacement": "IIotaBridge"
            },
            {
                "regex": "(?<![A-Z])(Suins)(?=[^a-z]|$)",
                "replacement": "IotaNS"
            },
            {
                "regex": "(?<![a-zA-Z])(suins)(?=[^a-z]|$)",
                "replacement": "iotans"
            }
        ]
    },
    "code_renames": {
        "ignore": {
            "folders": [
                "^target$",
                "^\\.git$",
                "^scripts",
                "packages_compiled/*",
                "bytecode_snapshot/*"
            ],
            "files": [
                "20873329\\.yaml",
                "LICENSE-docs",
                "docusaurus\\.config\\.js",
                "deny\\.toml"
            ],
            "file_types": [
                "\\.svg\\b",
                "\\.png\\b",
                "\\.jpg\\b",
                "\\.jpeg\\b",
                "\\.ico\\b",
                "\\.bin\\b",
                "\\.gif\\b",
                "\\.pdf\\b",
                "\\.mv\\b",
                "\\.bcs\\b",
                "\\.woff\\b",
                "\\.woff2\\b",
                "\\.wasm\\b",
                "\\.ttf\\b",
                "\\.otf\\b",
                "\\.chk\\b",
                "\\.errmap\\b",
                "\\.ai\\b",
                "\\.mp3\\b",
                "\\.wav\\b",
                "\\.mvsm\\b"
            ]
        },
        "patterns": [
            {
                "regex": "authors = \\[\"Mysten Labs <build@mystenlabs\\.com>\"\\]",
                "replacement": "authors = [\"IOTA Foundation <info@iota.org>\"]"
            },
            {
                "regex": "authors = \\[\"Mysten Labs <eng@mystenlabs\\.com>\"\\]",
                "replacement": "authors = [\"IOTA Foundation <info@iota.org>\"]"
            },
            {
                "regex": "\"author\": \"Mysten Labs <build@mystenlabs\\.com>\"",
                "replacement": "\"author\": \"IOTA Foundation <info@iota.org>\""
            },
            {
                "regex": "(?<!# Modifications Copyright \\(c\\) 2024 IOTA Stiftung\\s)(?<!# Copyright \\(c\\) 2024 IOTA Stiftung\\s)(^# SPDX-License-Identifier: Apache-2\\.0)",
                "replacement": "# Modifications Copyright (c) 2024 IOTA Stiftung\\n# SPDX-License-Identifier: Apache-2.0",
                "comment": "add IOTA copyright if not present"
            },
            {
                "regex": "(?<!\/\/ Modifications Copyright \\(c\\) 2024 IOTA Stiftung\\s)(^\\+\/\/ SPDX-License-Identifier: Apache-2\\.0)",
                "replacement": "+// Modifications Copyright (c) 2024 IOTA Stiftung\\n+// SPDX-License-Identifier: Apache-2.0",
                "comment": "add IOTA copyright if not present"
            },
            {
                "regex": "(?<!\/\/ Modifications Copyright \\(c\\) 2024 IOTA Stiftung\\s)(?<!\/\/ Copyright \\(c\\) 2024 IOTA Stiftung\\s)(^\/\/ SPDX-License-Identifier: Apache-2\\.0)",
                "replacement": "// Modifications Copyright (c) 2024 IOTA Stiftung\\n// SPDX-License-Identifier: Apache-2.0",
                "comment": "add IOTA copyright if not present"
            },
            {
                "regex": "(?<!\/\/ Modifications Copyright \\(c\\) 2024 IOTA Stiftung\\s)(?<!\/\/ Copyright \\(c\\) 2024 IOTA Stiftung\\s)(^\/\/ SPDX-License-Identifier: MIT)",
                "replacement": "// Modifications Copyright (c) 2024 IOTA Stiftung\\n// SPDX-License-Identifier: MIT",
                "comment": "add IOTA copyright if not present"
            },
            {
                "regex": "https:\/\/discord\\.gg\/BK6WFhud",
                "replacement": "https://discord.iota.org",
                "comment": "update discord invite link"
            },            
            {
                "regex": "data\\.amplitude\\.com\/mystenlabs\/",
                "replacement": "data.amplitude.com/iotaledger/"
            },            
            {
                "regex": "docs\\.[Mm]ysten[Ll]abs\\.com",
                "replacement": "docs.iota.org"
            },
            {
                "regex": "\\{\\`\\$\\{new Date\\(\\)\\.getFullYear\\(\\)\\}\\s+Mysten\\s+Labs\\.\\s+All\\s+rights\\s+reserved\\.\\`\\}",
                "replacement": "{`${new Date().getFullYear()} <a href='https://www.iota.org/'>IOTA Stiftung</a>. The explorer is adapted from the <a href='https://github.com/MystenLabs/sui/tree/mainnet-v1.22.0/apps/explorer'>Sui Explorer</a>, Â© 2024 by <a href='https://mystenlabs.com/'>Mysten Labs</a>, licensed under <a href='https://github.com/MystenLabs/sui/blob/mainnet-v1.22.0/LICENSE'>Apache License 2.0</a>. All rights reserved.`}",
                "comment": "Fix the explorer copyright"
            },
            {
                "regex": "https://github\\.com/stefan-mysten/iota/tree/rust_sdk_api_examples/crates/iota-sdk/examples#preqrequisites",
                "replacement": "https://github.com/iotaledger/iota/tree/develop/crates/iota-sdk/README.md#prerequisites",
                "comment": "Fix an outdated link"
            },
            {
                "regex": "https://github\\.com/MystenLabs/blob/main/crates/mysten-util-mem/src/external_impls\\.rs",
                "replacement": "https://github.com/iotaledger/iota/blob/develop/crates/iota-util-mem/src/external_impls.rs",
                "comment": "Fix a broken link"
            },
            {
                "regex": "https:\\/\\/github\\.com\\/iotaledger\\/iota\\/blob\\/[a-zA-Z-_]+\\/crates\\/[a-zA-Z-_]+\\/docs\\/([a-zA-Z-_\\/]+)\\/([a-zA-Z-_]+)\\.md",
                "replacement": "/references/framework/\\g<1>/\\g<2>.md",
                "comment": "Docs got moved to the docs folder"
            },
            {
                "regex": "[Mm]ysten[Ll]abs\\.com\/#community",
                "replacement": "iota.org/connect/contact"
            },
            {
                "regex": "[Mm]ysten[Ll]abs\\.com\/blog",
                "replacement": "blog.iota.org"
            },
            {
                "regex": "[Mm]ysten[Ll]abs\\.com\/legal\\?content=privacy",
                "replacement": "iota.org/cookie-policy"
            },
            {
                "regex": "[Mm]ysten[Ll]abs\\.com\/legal#termsofservice",
                "replacement": "iota.org/terms-of-use"
            },   
            {
                "regex": "[Mm]ysten[Ll]abs\\.com\/legal#privacypolicy",
                "replacement": "iota.org/privacy-policy"
            },
            {
                "regex": "sdk\\.[Mm]ysten[Ll]abs\\.com\/typescript",
                "replacement": "docs.iota.org/references/ts-sdk/typescript"
            },
            {
                "regex": "sdk\\.[Mm]ysten[Ll]abs\\.com\/",
                "replacement": "docs.iota.org/references/ts-sdk/"
            },
            {
                "regex": "sdk\\.[Mm]ysten[Ll]abs\\.com",
                "replacement": "docs.iota.org/references/ts-sdk/typescript"
            },
            {
                "regex": "[Mm]ysten[Ll]abs\\.com",
                "replacement": "iota.org"
            },
            {
                "regex": "mysten-labs\\.vercel\\.app",
                "replacement": "iota-foundation.vercel.app"
            },
            {
                "regex": "medium\\.com\/mysten-labs",
                "replacement": "medium.com/iota-foundation"
            },            
            {
                "regex": "linkedin\\.com\/company\/mysten-labs",
                "replacement": "linkedin.com/company/iotafoundation"
            },
            {
                "regex": "twitter\\.com\/Mysten_Labs",
                "replacement": "x.com/iota"
            },            
            {
                "regex": "https:\/\/sui\\.io",
                "replacement": "https://iota.org"
            },
            {
                "regex": "https:\/\/suifoundation\\.org",
                "replacement": "https://iota.org"
            },
            {
                "regex": "docs\\.sui\\.io",
                "replacement": "docs.iota.org"
            },            
            {
                "regex": "suiexplorer\\.com",
                "replacement": "explorer.iota.org"
            },
            {
                "regex": "[Ss]uiscan\\.xyz",
                "replacement": "iotascan.xyz"
            },
            {
                "regex": "[Ss]uivision\\.xyz",
                "replacement": "iotavision.xyz"
            },
            {
                "regex": "suibridge\\.io",
                "replacement": "iotabridge.io"
            },
            {
                "regex": "hub\\.docker\\.com\/r\/mysten\/",
                "replacement": "hub.docker.com/r/iotaledger/"
            },
            {
                "regex": "twitter\\.com\/suinetwork",
                "replacement": "x.com/iota"
            },
            {
                "regex": "mystenlabs\\.okta\\.com",
                "replacement": "iotafoundation.okta.com"
            },
            {
                "regex": "suiwallet\\.banxa\\.com",
                "replacement": "iotawallet.banxa.com"
            },
            {
                "regex": "suifrens\\.com",
                "replacement": "iotafrens.com"
            },
            {
                "regex": "suins\\.io",
                "replacement": "iotans.io"
            },        
            {
                "regex": "[Mm]ysten[Ll]abs\/sui(?!-rust-sdk)",
                "replacement": "iotaledger/iota"
            },
            {
                "regex": "github\\.com\/[Mm]ysten[Ll]abs(?!\/fastcrypto)(?!\/mysticeti)(?!(\/tree\/develop)?\/narwhal)(?!\/fastnft)",
                "replacement": "github.com/iotaledger",
                "ignore": {
                    "files": [
                        "Cargo\\.toml",
                        "Cargo\\.lock"
                    ]
                },
                "comment": "replace 'github.com/mystenlabs' with 'github.com/iotaledger' except for 'fastcrypto', 'mysticeti', 'narwhal', 'fastnft' repositories"
            },
            {
                "regex": "github\\.com\/stefan-mysten\/",
                "replacement": "github.com/iotaledger/"
            },
            {
                "regex": "mystenlabs\\.github\\.io\/",
                "replacement": "github.com/iotaledger/"
            },
            {
                "regex": "Mysten source service",
                "replacement": "IOTA source service"
            },
            {
                "regex": "Mysten's network tooling",
                "replacement": "IOTA's network tooling"
            },
            {
                "regex": "Mysten metrics",
                "replacement": "IOTA metrics"
            },
            {
                "regex": "mystens metric",
                "replacement": "IOTA's metric"
            },
            {
                "regex": "Mysten org",
                "replacement": "IOTA Foundation"
            },
            {
                "regex": "mysten-labs",
                "replacement": "iota-foundation"
            },
            {
                "regex": "(?<!developed by )Mysten Labs(?!, Inc)",
                "replacement": "IOTA Foundation",
                "comment": "replace 'Mysten Labs' with 'IOTA Foundation' except for 'Mysten Labs, Inc' or if prefixed with 'developed by'"
            },
            {
                "regex": "Mysten Lab(?!s, Inc)",
                "replacement": "IOTA Foundation"
            },
            {
                "regex": "-Mysten",
                "replacement": "-Iota"
            },
            {
                "regex": "Mysten Kiosk",
                "replacement": "IOTA Kiosk"
            },
            {
                "regex": "(?<!developed by )\\bMysten\\b(?! Labs, Inc)",
                "replacement": "IOTA Foundation",
                "comment": "replace 'Mysten' with 'IOTA Foundation' except for 'Mysten Labs, Inc' or if prefixed with 'developed by'"
            },
            {
                "regex": ", Mysten Labs, Inc\\.",
                "replacement": ", IOTA Foundation"
            },    
            {
                "regex": "mysten-employees",
                "replacement": "iotafoundation-employees"
            },
            {
                "regex": "@MystenLabs",
                "replacement": "@IF"
            },
            {
                "regex": "(?<!github\\.com\/)[mM]ysten[lL]abs\/(?!fastcrypto)",
                "replacement": "iotaledger/",
                "ignore": {
                    "files": [
                        "Cargo\\.toml",
                        "Cargo\\.lock"
                    ]
                },
                "comment": "replace 'mystenlabs/' with 'iotaledger/' except for 'fastcrypto' or if prefixed with 'github.com/'"
            },
            {
                "regex": "\"publisher\": \"mysten\"",
                "replacement": "\"publisher\": \"IOTA Foundation\""
            },            
            {
                "regex": "repo = \"MystenLabs\"",
                "replacement": "repo = \"iotaledger\""
            },
            {
                "regex": "(?<!github\\.com\/)(?<![A-Z])(MystenLabs)(?=[^a-z]|$)(?!\/fastcrypto)(?!_[Rr]ed\\.svg)",
                "replacement": "IotaFoundation",
                "ignore": {
                    "files": [
                        "Cargo\\.toml",
                        "Cargo\\.lock"
                    ]
                },
                "comment": "replace 'MystenLabs' with 'IotaFoundation' except for 'fastcrypto' or if prefixed with 'github.com/' or uppercase letter"
            },
            {
                "regex": "(?<!github\\.com\/)MystenLabs(?!/fastcrypto\\.git)(?!_[Rr]ed\\.svg)",
                "replacement": "IOTA Foundation",
                "ignore": {
                    "files": [
                        "Cargo\\.toml",
                        "Cargo\\.lock"
                    ]
                },
                "comment": "replace 'MystenLabs' with 'IOTA Foundation' except for 'fastcrypto.git' or if prefixed with github.com/"
            },
            {
                "regex": "mysten_labs(?!_red)",
                "replacement": "iota",
                "ignore": {
                    "files": [
                        "Cargo\\.toml",
                        "Cargo\\.lock"
                    ]
                },
                "comment": "replace 'mysten_labs' with 'iota' except for 'mysten_labs_red'"
            },            
            {
                "regex": "mystenlabs org",
                "replacement": "IOTA Foundation"
            },
            {
                "regex": "(?<!github\\.com\/)mystenlabs",
                "replacement": "iota",
                "ignore": {
                    "files": [
                        "Cargo\\.toml",
                        "Cargo\\.lock"
                    ]
                },
                "comment": "replace 'mystenlabs' with 'iota' except for if prefixed with 'github.com/'"
            },            
            {
                "regex": "--scope mysten",
                "replacement": "--scope iota"
            },            
            {
                "regex": "@Mysten_Labs",
                "replacement": "@IOTA_Foundation"
            },
            {
                "regex": "@mysten/sui\\.js(?=[^a-z]|$)",
                "replacement": "@iota/iota-sdk",
                "comment": "we renamed the sdk to 'iota-sdk'"
            },
            {
                "regex": "@mysten/sui(?=[^a-z]|$)",
                "replacement": "@iota/iota-sdk",
                "comment": "we renamed the sdk to 'iota-sdk'"
            },
            {
                "regex": "@mysten",
                "replacement": "@iota"
            },
            {
                "regex": "[Ss]ui\\.js",
                "replacement": "iota-sdk",
                "comment": "we renamed the sdk to 'iota-sdk'"
            },
            {
                "regex": "x-sUi-RpC-vERSION",
                "replacement": "x-sui-rpc-version",
                "comment": "fix wrong casing in older Sui codebase"
            },
            {
                "regex": "(?<![A-Z])(SUI)(?=[^a-zA-Z]|$)",
                "replacement": "IOTA",
                "comment": "replace 'SUI' with 'IOTA' except if prefixed with uppercase letter or followed by alphabetic character"
            },
            {
                "regex": "Sui Smart Contract Platform",
                "replacement": "IOTA Smart Contract Platform"
            },
            {
                "regex": "(?<![A-Z])(Sui)(?=[^a-z]|$)",
                "replacement": "Iota",
                "comment": "replace 'Sui' with 'Iota' except if prefixed with uppercase letter or followed by lowercase letter"
            },
            {
                "regex": "KisokClientProvider",
                "replacement": "KioskClientProvider",
                "comment": "replace 'KisokClientProvider' with 'KioskClientProvider' to fix a typo"
            },
            {
                "regex": "sui-common\\.workspace",
                "replacement": "sui-authority-aggregation.workspace",
                "comment": "remove accidentally added sui-common crate"
            },
            {
                "regex": "sui_common::authority_aggregation",
                "replacement": "sui_authority_aggregation",
                "comment": "remove accidentally added sui-common crate"
            },
            {
                "regex": "\"sui-common\",",
                "replacement": "\"sui-authority-aggregation\",",
                "comment": "remove accidentally added sui-common crate"
            },            
            {
                "regex": "\\bSUi\\b",
                "replacement": "Iota",
                "comment": "replace 'SUi' with 'Iota' to fix a typo"
            },            
            {
                "regex": "(?<![A-Z])(Suis)(?=[^a-z]|$)",
                "replacement": "Iotas",
                "comment": "replace 'Suis' with 'Iotas' except if prefixed with uppercase letter or followed by lowercase letter"
            },
            {
                "regex": "(?<![a-zA-Z])(suis)(?=[^a-z]|$)",
                "replacement": "iotas",
                "comment": "replace 'suis' with 'iotas' except if prefixed with alphabetic character or followed by lowercase letter"
            },
            {
                "regex": "(?<![a-zA-Z])(sui)(?=[^a-z]|$)(?!-foundation\/sips)(?!-rust-sdk)",
                "replacement": "iota",
                "comment": "replace 'sui' with 'iota' except if prefixed with alphabetic character or followed by lowercase letter or '-foundation/sips' or '-rust-sdk'"
            },
            {
                "regex": "(?<![A-Z])(MIST)(?=[^a-zA-Z]|$)",
                "replacement": "NANOS",
                "comment": "replace 'MIST' with 'NANOS' except if prefixed with uppercase letter or followed by alphabetic character"
            },
            {
                "regex": "(?<![A-Z])(Mist)(?=[^a-z]|$)",
                "replacement": "Nanos",
                "comment": "replace 'Mist' with 'Nanos' except if prefixed with uppercase letter or followed by lowercase letter"
            },
            {
                "regex": "(?<![a-zA-Z])(mist)(?=[^a-z]|$)",
                "replacement": "nanos",
                "comment": "replace 'mist' with 'nanos' except if prefixed with alphabetic character or followed by lowercase letter"
            },
            {
                "regex": "(?<![A-Z])(MYSTEN_LABS)(?=[^a-zA-Z]|$)",
                "replacement": "IOTA_FOUNDATION",
                "comment": "replace 'MYSTEN_LABS' with 'IOTA_FOUNDATION' except if prefixed with uppercase letter or followed by alphabetic character"
            },
            {
                "regex": "mysten\/",
                "replacement": "iotaledger/",
                "ignore": {
                    "files": [
                        "Cargo\\.toml",
                        "Cargo\\.lock"
                    ]
                },
                "comment": "replace 'mysten/' with 'iotaledger/'"
            },            
            {
                "regex": "mysten-network",
                "replacement": "iota-network-stack",
                "comment": "replace 'mysten-network' with 'iota-network-stack' to prevent non-unique crate names"
            },
            {
                "regex": "default_mysten_network_config",
                "replacement": "default_iota_network_config"
            },
            {
                "regex": "mysten_network",
                "replacement": "iota_network_stack",
                "comment": "replace 'mysten_network' with 'iota_network_stack' to prevent non-unique crate names"
            },
            {
                "regex": "(?<![A-Z])(MYSTEN)(?=[^a-zA-Z]|$)",
                "replacement": "IOTA",
                "comment": "replace 'MYSTEN' with 'IOTA' except if prefixed with uppercase letter or followed by alphabetic character"
            },
            {
                "regex": "(?<!developed by )(?<![A-Z])(Mysten)(?=[^a-z]|$)(?! Labs, Inc)(?!Labs)",
                "replacement": "Iota",
                "ignore": {
                    "files": [
                        "Cargo\\.toml",
                        "Cargo\\.lock"
                    ]
                },
                "comment": "replace 'Mysten' with 'Iota' except for 'Mysten Labs, Inc' or if prefixed with 'developed by' or uppercase letter"
            },
            {
                "regex": "(?<!github\\.com/[Mm]ysten[Ll]abs/)(?<!github\\.com/[Mm]ysten[Ll]abs/blob/main/crates/)mysten-(?!labs)(?!mainnet-)(?!testnet-)",
                "replacement": "iota-",
                "comment": "replace 'mysten-' with 'iota-' except for 'mysten-labs', 'mysten-mainnet-', 'mysten-testnet-' or if prefixed with 'github.com/mystenlabs/' or 'github.com/mystenlabs/blob/main/crates/'"
            },
            {
                "regex": "(?<![Mm]ysten[Ll]abs\/)(?<![a-zA-Z])(mysten)(?=[^a-z]|$)(?!(_)labs)(?!/sui-rust-sdk)",
                "replacement": "iota",
                "comment": "replace 'mysten' with 'iota' except for 'mystenlabs/' or if prefixed with alphabetic character or 'mystenlabs/' or if followed by lowercase letter or '_labs' or '/sui-rust-sdk'"
            },
            {
                "regex": "(?<![A-Z])(Suins)(?=[^a-z]|$)",
                "replacement": "IotaNS",
                "comment": "replace 'Suins' with 'IotaNS' except if prefixed with uppercase letter or followed by lowercase letter"
            },
            {
                "regex": "NotASuins",
                "replacement": "NotAnIotaNS",
                "comment": "replace 'NotASuins' with 'NotAnIotaNS'"
            },
            {
                "regex": "(?<![a-zA-Z])(suins)(?=[^a-z]|$)",
                "replacement": "iotans",
                "comment": "replace 'suins' with 'iotans' except if prefixed with alphabetic character or followed by lowercase letter"
            },
            {
                "regex": "suiprivkey",
                "replacement": "iotaprivkey"
            },
            {
                "regex": "suix",
                "replacement": "iotax"
            },
            {
                "regex": "ISuiBridge",
                "replacement": "IIotaBridge"
            },
            {
                "regex": "WSUI",
                "replacement": "WIOTA"
            },
            {
                "regex": "SUIUSD",
                "replacement": "IOTAUSD"
            },
            {
                "regex": "SUIs",
                "replacement": "IOTAs"
            },
            {
                "regex": "Suifren",
                "replacement": "Iotafren"
            },
            {
                "regex": "suifren",
                "replacement": "iotafren"
            },
            {
                "regex": "suiop",
                "replacement": "iotaop"
            },
            {
                "regex": "suioop",
                "replacement": "iotaoop"
            },
            {
                "regex": "suipop",
                "replacement": "iotaop"
            },            
            {
                "regex": "suiwallet",
                "replacement": "iotawallet"
            },
            {
                "regex": "suidb",
                "replacement": "iotadb"
            },
            {
                "regex": "suinode",
                "replacement": "iotanode"
            },
            {
                "regex": "suiaddress",
                "replacement": "iotaaddress"
            },
            {
                "regex": "suisig",
                "replacement": "iotasig"
            },
            {
                "regex": "suicomm",
                "replacement": "iotacomm"
            },
            {
                "regex": "suival",
                "replacement": "iotaval"
            },
            {
                "regex": "suifn",
                "replacement": "iotafn"
            },
            {
                "regex": "SUISCAN",
                "replacement": "IOTASCAN"
            },
            {
                "regex": "suiscan",
                "replacement": "iotascan"
            },
            {
                "regex": "SUIVISION",
                "replacement": "IOTAVISION"
            },
            {
                "regex": "suivision",
                "replacement": "iotavision"
            },
            {
                "regex": "SUISYS",
                "replacement": "IOTASYS"
            },
            {
                "regex": "suisys",
                "replacement": "iotasys"
            },
            {
                "regex": "iota\/blob\/main\/crates",
                "replacement": "iota/blob/develop/crates",
                "comment": "change branch name from 'main' to 'develop'"
            },
            {
                "regex": "name = \"iota-sdk\"\\sversion = \"0\\.0\\.0\"",
                "replacement": "name = \"sui-sdk\"\nversion = \"0.0.0\"",
                "comment": "temporary fix until there is a fork of the sui-rust-sdk"
            },
            {
                "regex": "iota-sdk2 = \\{ package = \"iota-sdk\"",
                "replacement": "iota-sdk2 = { package = \"sui-sdk\"",
                "comment": "temporary fix until there is a fork of the sui-rust-sdk"
            },
            {
                "regex": "(?<![a-zA-Z])(skp)(?=[^a-z]|$)",
                "replacement": "ikp",
                "comment": "sui_key_pair => iota_key_pair"
            }
        ]
    },
    "overwrites": [
        {
            "source": "../../docs",
            "destination": "docs/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own docs"
        },
        {
            "source": "../../.github",
            "destination": ".github/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own github CI"
        },
        {
            "source": "../../.cargo",
            "destination": ".cargo/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own config"
        },
        {
            "source": "../../.config",
            "destination": ".config/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own config"
        },
        {
            "source": "../../.changeset",
            "destination": ".changeset/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own config"
        },
        {
            "source": "../../.clippy.toml",
            "destination": ".clippy.toml",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "../../consensus/.clippy.toml",
            "destination": "consensus/.clippy.toml",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "../../narwhal/.clippy.toml",
            "destination": "narwhal/.clippy.toml",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "../../.typos.toml",
            "destination": ".typos.toml",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "../../dprint.json",
            "destination": "dprint.json",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "../../rustfmt.toml",
            "destination": "rustfmt.toml",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "overwrites_slipstream/turbo.json",
            "destination": "turbo.json",
            "min_sem_version": "",
            "max_sem_version": "mainnet-v1.29.0",
            "comment": "we always use our own config, but the format changed in 1.29.2"
        },
        {
            "source": "overwrites_slipstream/apps_wallet_turbo.json",
            "destination": "apps/wallet/turbo.json",
            "min_sem_version": "",
            "max_sem_version": "mainnet-v1.29.0",
            "comment": "we always use our own config, but the format changed in 1.29.2"
        },
        {
            "source": "../../turbo.json",
            "destination": "turbo.json",
            "min_sem_version": "mainnet-v1.29.1",
            "max_sem_version": "",
            "comment": "we always use our own config, but the format changed in 1.29.2"
        },
        {
            "source": "../../apps/wallet/turbo.json",
            "destination": "apps/wallet/turbo.json",
            "min_sem_version": "mainnet-v1.29.1",
            "max_sem_version": "",
            "comment": "we always use our own config, but the format changed in 1.29.2"
        },
        {
            "source": "../../pnpm-workspace.yaml",
            "destination": "pnpm-workspace.yaml",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own workspace definition"
        },        
        {
            "source": "../../.eslintrc.js",
            "destination": ".eslintrc.js",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "../../prettier.config.js",
            "destination": "prettier.config.js",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "../../.prettierignore",
            "destination": ".prettierignore",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own linter rules"
        },
        {
            "source": "../../.github/CODEOWNERS",
            "destination": ".github/CODEOWNERS",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own CODEOWNERS"
        },
        {
            "source": "../../CONTRIBUTING.md",
            "destination": "CONTRIBUTING.md",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "we always use our own contributing guide"
        },
        {
            "source": "../../apps/apps-backend",
            "destination": "apps/apps-backend/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "this only exists in our fork"
        },
        {
            "source": "../../apps/explorer",
            "destination": "apps/explorer/",
            "min_sem_version": "mainnet-v1.23.0",
            "max_sem_version": "",
            "comment": "this was removed from the upstream repo, but we still need it"
        },
        {
            "source": "../../apps/ui",
            "destination": "apps/ui/",
            "min_sem_version": "mainnet-v1.23.0",
            "max_sem_version": "",
            "comment": "this was removed from the upstream repo, but we still need it"
        },
        {
            "source": "../../apps/ui-icons",
            "destination": "apps/ui-icons/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "this only exists in our fork"
        },
        {
            "source": "../../apps/ui-kit",
            "destination": "apps/ui-kit/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "this only exists in our fork"
        },
        {
            "source": "../../apps/wallet-dashboard",
            "destination": "apps/wallet-dashboard/",
            "min_sem_version": "",
            "max_sem_version": "",
            "comment": "this only exists in our fork"
        }
    ],
    "patches": {
        "clippy": {
            "min_sem_version": "",
            "max_sem_version": "",
            "revert": true,
            "comment": "we want to have some extra clippy rules, which we need to revert at the end"
        },
        "pnpm-workspace": {
            "min_sem_version": "",
            "max_sem_version": "",
            "revert": true,
            "comment": "we don't want to lint 'apps' and 'docs' which we simply copied from our repo"
        },
        "iota-authority-aggregation-clone": {
            "min_sem_version": "",
            "max_sem_version": "1.30.0",
            "revert": false,
            "comment": "this is needed to remove the sui-common crate, but was patched by them in 1.30.0"
        }
    },
    "commands": []
}
